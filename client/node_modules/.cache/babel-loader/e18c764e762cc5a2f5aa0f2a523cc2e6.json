{"ast":null,"code":"import { createSlice, current } from \"@reduxjs/toolkit\";\nconst initialState = [{\n  listName: \"To-Do\",\n  todoList: [\"Buy Milk\", \"Go Home\"],\n  doneList: []\n}, {\n  listName: \"Home\",\n  todoList: [\"Buy Sofa\", \"Go Phone\"],\n  doneList: []\n}, {\n  listName: \"Work\",\n  todoList: [\"Text\", \"Call\"],\n  doneList: []\n}];\nexport const listsSlice = createSlice({\n  name: \"lists\",\n  initialState,\n  reducers: {\n    addTodo: function () {\n      let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n      let action = arguments.length > 1 ? arguments[1] : undefined;\n      // console.log(current(state));\n      console.log(action.payload);\n      state[action.payload.idx].todoList.push(action.payload.inputText);\n    },\n    deleteTodo: function () {\n      let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n      let action = arguments.length > 1 ? arguments[1] : undefined;\n      state[action.payload.indexOfList].todoList.splice(action.payload.indexOfCard, 1);\n    },\n    addNewList: function () {\n      let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n      let action = arguments.length > 1 ? arguments[1] : undefined;\n      // console.log(current(state));\n      console.log(action.payload);\n      state.push({\n        listName: action.payload,\n        todoList: [],\n        doneList: []\n      });\n    },\n    deleteList: function () {\n      let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n      let action = arguments.length > 1 ? arguments[1] : undefined;\n      // console.log(current(state[action.payload]));\n      return state.filter((item, index) => index !== action.payload);\n    },\n    editListName: function () {\n      let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n      let action = arguments.length > 1 ? arguments[1] : undefined;\n      state[action.payload.index].listName = action.payload.title;\n    }\n  }\n}); // Action creators are generated for each case reducer function\n\nexport const {\n  addTodo,\n  deleteTodo,\n  addNewList,\n  deleteList,\n  editListName\n} = listsSlice.actions;\nexport default listsSlice.reducer;","map":{"version":3,"names":["createSlice","current","initialState","listName","todoList","doneList","listsSlice","name","reducers","addTodo","state","action","console","log","payload","idx","push","inputText","deleteTodo","indexOfList","splice","indexOfCard","addNewList","deleteList","filter","item","index","editListName","title","actions","reducer"],"sources":["/Users/anketpatil/Desktop/Web Development/todo/client/src/redux/listsSlice.js"],"sourcesContent":["import { createSlice, current } from \"@reduxjs/toolkit\";\n\nconst initialState = [\n  {\n    listName: \"To-Do\",\n    todoList: [\"Buy Milk\", \"Go Home\"],\n    doneList: []\n\n  },\n  {\n    listName: \"Home\",\n    todoList: [\"Buy Sofa\", \"Go Phone\"],\n    doneList: []\n\n  },\n  {\n    listName: \"Work\",\n    todoList: [\"Text\", \"Call\"],\n    doneList: []\n  },\n];\n\nexport const listsSlice = createSlice({\n  name: \"lists\",\n  initialState,\n  reducers: {\n    addTodo: (state = initialState, action) => {\n      // console.log(current(state));\n      console.log(action.payload);\n      state[action.payload.idx].todoList.push(action.payload.inputText);\n    },\n    deleteTodo: (state = initialState, action) => {\n      state[action.payload.indexOfList].todoList.splice(action.payload.indexOfCard, 1);\n    },\n    addNewList: (state = initialState, action) => {\n      // console.log(current(state));\n      console.log(action.payload);\n\n      state.push({\n        listName: action.payload,\n        todoList: [],\n        doneList: [],\n      });\n    },\n    deleteList: (state = initialState, action) => {\n      // console.log(current(state[action.payload]));\n      return state.filter((item, index) => index !== action.payload);\n    },\n    editListName: (state = initialState, action) => {\n      state[action.payload.index].listName = action.payload.title;\n\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { addTodo, deleteTodo, addNewList, deleteList, editListName } = listsSlice.actions;\n\nexport default listsSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,OAAtB,QAAqC,kBAArC;AAEA,MAAMC,YAAY,GAAG,CACnB;EACEC,QAAQ,EAAE,OADZ;EAEEC,QAAQ,EAAE,CAAC,UAAD,EAAa,SAAb,CAFZ;EAGEC,QAAQ,EAAE;AAHZ,CADmB,EAOnB;EACEF,QAAQ,EAAE,MADZ;EAEEC,QAAQ,EAAE,CAAC,UAAD,EAAa,UAAb,CAFZ;EAGEC,QAAQ,EAAE;AAHZ,CAPmB,EAanB;EACEF,QAAQ,EAAE,MADZ;EAEEC,QAAQ,EAAE,CAAC,MAAD,EAAS,MAAT,CAFZ;EAGEC,QAAQ,EAAE;AAHZ,CAbmB,CAArB;AAoBA,OAAO,MAAMC,UAAU,GAAGN,WAAW,CAAC;EACpCO,IAAI,EAAE,OAD8B;EAEpCL,YAFoC;EAGpCM,QAAQ,EAAE;IACRC,OAAO,EAAE,YAAkC;MAAA,IAAjCC,KAAiC,uEAAzBR,YAAyB;MAAA,IAAXS,MAAW;MACzC;MACAC,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,OAAnB;MACAJ,KAAK,CAACC,MAAM,CAACG,OAAP,CAAeC,GAAhB,CAAL,CAA0BX,QAA1B,CAAmCY,IAAnC,CAAwCL,MAAM,CAACG,OAAP,CAAeG,SAAvD;IACD,CALO;IAMRC,UAAU,EAAE,YAAkC;MAAA,IAAjCR,KAAiC,uEAAzBR,YAAyB;MAAA,IAAXS,MAAW;MAC5CD,KAAK,CAACC,MAAM,CAACG,OAAP,CAAeK,WAAhB,CAAL,CAAkCf,QAAlC,CAA2CgB,MAA3C,CAAkDT,MAAM,CAACG,OAAP,CAAeO,WAAjE,EAA8E,CAA9E;IACD,CARO;IASRC,UAAU,EAAE,YAAkC;MAAA,IAAjCZ,KAAiC,uEAAzBR,YAAyB;MAAA,IAAXS,MAAW;MAC5C;MACAC,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,OAAnB;MAEAJ,KAAK,CAACM,IAAN,CAAW;QACTb,QAAQ,EAAEQ,MAAM,CAACG,OADR;QAETV,QAAQ,EAAE,EAFD;QAGTC,QAAQ,EAAE;MAHD,CAAX;IAKD,CAlBO;IAmBRkB,UAAU,EAAE,YAAkC;MAAA,IAAjCb,KAAiC,uEAAzBR,YAAyB;MAAA,IAAXS,MAAW;MAC5C;MACA,OAAOD,KAAK,CAACc,MAAN,CAAa,CAACC,IAAD,EAAOC,KAAP,KAAiBA,KAAK,KAAKf,MAAM,CAACG,OAA/C,CAAP;IACD,CAtBO;IAuBRa,YAAY,EAAE,YAAkC;MAAA,IAAjCjB,KAAiC,uEAAzBR,YAAyB;MAAA,IAAXS,MAAW;MAC9CD,KAAK,CAACC,MAAM,CAACG,OAAP,CAAeY,KAAhB,CAAL,CAA4BvB,QAA5B,GAAuCQ,MAAM,CAACG,OAAP,CAAec,KAAtD;IAED;EA1BO;AAH0B,CAAD,CAA9B,C,CAiCP;;AACA,OAAO,MAAM;EAAEnB,OAAF;EAAWS,UAAX;EAAuBI,UAAvB;EAAmCC,UAAnC;EAA+CI;AAA/C,IAAgErB,UAAU,CAACuB,OAAjF;AAEP,eAAevB,UAAU,CAACwB,OAA1B"},"metadata":{},"sourceType":"module"}