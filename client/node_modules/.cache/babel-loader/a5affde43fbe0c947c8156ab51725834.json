{"ast":null,"code":"import { createSlice, current } from \"@reduxjs/toolkit\";\nconst initialState = [{\n  listName: \"To-Do\",\n  todoList: [\"Buy Milk\", \"Go Home\"],\n  doneList: []\n}, {\n  listName: \"To-Do\",\n  todoList: [\"Buy Milk\", \"Go Home\"],\n  doneList: []\n}, {\n  listName: \"To-Do\",\n  todoList: [\"Buy Milk\", \"Go Home\"],\n  doneList: []\n}];\nexport const listsSlice = createSlice({\n  name: \"lists\",\n  initialState,\n  reducers: {\n    addTodo: function () {\n      let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n      let action = arguments.length > 1 ? arguments[1] : undefined;\n      console.log(current(state));\n      console.log(action.payload);\n      console.log(current(state[action.payload.idx].cardsList));\n      state[action.payload.idx].todoList.push(action.payload.todo);\n      return state;\n    },\n    deleteCard: function () {\n      let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n      let action = arguments.length > 1 ? arguments[1] : undefined;\n      let newCardList = state[action.payload.indexOfList].cardsList;\n      console.log(current(newCardList));\n      console.log(action.payload.indexOfCard);\n      newCardList.splice(action.payload.indexOfCard, 1); // return newCardList;\n      // state = (newCardList.filter((item,index) => index!==action.payload.indexOfCard));\n      // newCardList = [...newCardList.slice(0, action.payload.indexOfCard), ...newCardList.slice(action.payload.indexOfCard)];\n      // console.log(current(state))\n    },\n    newList: function () {\n      let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n      let action = arguments.length > 1 ? arguments[1] : undefined;\n      console.log(current(state));\n      state.push({\n        listName: \"List Name\",\n        cardsList: []\n      });\n    },\n    deleteList: function () {\n      let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n      let action = arguments.length > 1 ? arguments[1] : undefined;\n      console.log(current(state[action.payload]));\n      return state.filter((item, index) => index !== action.payload);\n    },\n    editListName: function () {\n      let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n      let action = arguments.length > 1 ? arguments[1] : undefined;\n      console.log(current(state));\n      console.log(action.payload);\n      state[action.payload.index].listName = action.payload.title;\n    }\n  }\n}); // Action creators are generated for each case reducer function\n\nexport const {\n  addTodo,\n  deleteCard,\n  newList,\n  deleteList,\n  editListName\n} = listsSlice.actions;\nexport default listsSlice.reducer;","map":{"version":3,"names":["createSlice","current","initialState","listName","todoList","doneList","listsSlice","name","reducers","addTodo","state","action","console","log","payload","idx","cardsList","push","todo","deleteCard","newCardList","indexOfList","indexOfCard","splice","newList","deleteList","filter","item","index","editListName","title","actions","reducer"],"sources":["/Users/anketpatil/Desktop/Web Development/todo/client/src/redux/listsSlice.js"],"sourcesContent":["import { createSlice, current } from \"@reduxjs/toolkit\";\n\nconst initialState = [\n  {\n    listName: \"To-Do\",\n    todoList: [\"Buy Milk\", \"Go Home\"],\n    doneList: []\n\n  },\n  {\n    listName: \"To-Do\",\n    todoList: [\"Buy Milk\", \"Go Home\"],\n    doneList: []\n\n  },\n  {\n    listName: \"To-Do\",\n    todoList: [\"Buy Milk\", \"Go Home\"],\n    doneList: []\n  },\n];\n\nexport const listsSlice = createSlice({\n  name: \"lists\",\n  initialState,\n  reducers: {\n    addTodo: (state = initialState, action) => {\n      console.log(current(state));\n      console.log(action.payload);\n      console.log(current(state[action.payload.idx].cardsList));\n\n      state[action.payload.idx].todoList.push(action.payload.todo);\n      return state;\n    },\n    deleteCard: (state = initialState, action) => {\n      let newCardList = state[action.payload.indexOfList].cardsList;\n      console.log(current(newCardList));\n      console.log(action.payload.indexOfCard);\n      newCardList.splice(action.payload.indexOfCard, 1);\n      // return newCardList;\n      // state = (newCardList.filter((item,index) => index!==action.payload.indexOfCard));\n\n      // newCardList = [...newCardList.slice(0, action.payload.indexOfCard), ...newCardList.slice(action.payload.indexOfCard)];\n      // console.log(current(state))\n    },\n    newList: (state = initialState, action) => {\n      console.log(current(state));\n      state.push({\n        listName: \"List Name\",\n        cardsList: [],\n      });\n    },\n    deleteList: (state = initialState, action) => {\n      console.log(current(state[action.payload]));\n      return state.filter((item, index) => index !== action.payload);\n    },\n    editListName: (state = initialState, action) => {\n      console.log(current(state));\n      console.log(action.payload);\n      state[action.payload.index].listName = action.payload.title;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { addTodo, deleteCard, newList, deleteList, editListName } = listsSlice.actions;\n\nexport default listsSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}